{"version":3,"sources":["App.js","index.js"],"names":["RecipeContainer","styled","div","CoverImage","img","RecipeName","span","SeeMoreText","IngredientsText","SeeNewTab","RecipeComponent","props","useState","show","setShow","recipe","label","image","ingredients","url","Dialog","onClose","console","log","aria-labelledby","open","DialogTitle","DialogContent","map","ingredient","index","className","text","weight","DialogActions","onClick","window","src","alt","Container","AppName","Header","SearchBox","SearchIcon","RecipeImage","Placeholder","SearchInput","input","RecipeListContainer","AppComponent","searchQuery","updateSearchQuery","recipeList","updateRecipeList","timeoutId","updateTimeoutId","fetchData","searchString","a","Axios","get","response","data","hits","placeholder","value","onChange","e","clearTimeout","target","timeout","setTimeout","length","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"+UAWMA,EAAkBC,IAAOC,IAAV,8IAOfC,EAAaF,IAAOG,IAAV,oEAIVC,EAAaJ,IAAOK,KAAV,kLASVC,EAAcN,IAAOK,KAAV,0LASXE,EAAkBP,YAAOM,EAAPN,CAAH,6HAMfQ,EAAYR,YAAOM,EAAPN,CAAH,yEAITS,EAAkB,SAACC,GAAW,IAAD,EACTC,mBAAS,IADA,mBAC1BC,EAD0B,KACpBC,EADoB,OAGUH,EAAMI,OAAzCC,EAHyB,EAGzBA,MAAOC,EAHkB,EAGlBA,MAAOC,EAHW,EAGXA,YAAaC,EAHF,EAGEA,IACnC,OACE,eAACnB,EAAD,WACE,eAACoB,EAAA,EAAD,CACEC,QAAS,kBAAMC,QAAQC,IAAI,YAC3BC,kBAAgB,sBAChBC,OAAQZ,EAHV,UAKE,cAACa,EAAA,EAAD,0BACA,eAACC,EAAA,EAAD,WACE,cAACtB,EAAD,UAAaW,IACb,kCACE,kCACE,4CACA,2CAEF,gCACGE,EAAYU,KAAI,SAACC,EAAYC,GAAb,OACf,qBAAgBC,UAAU,kBAA1B,UACE,6BAAKF,EAAWG,OAChB,6BAAKH,EAAWI,WAFTH,cAQjB,eAACI,EAAA,EAAD,WACE,cAACzB,EAAD,CAAW0B,QAAS,kBAAMC,OAAOX,KAAKN,IAAtC,sBACA,cAACZ,EAAD,CAAa4B,QAAS,kBAAMrB,EAAQ,KAApC,yBAGJ,cAACX,EAAD,CAAYkC,IAAKpB,EAAOqB,IAAKtB,IAC7B,cAACX,EAAD,UAAaW,IACb,cAACR,EAAD,CAAiB2B,QAAS,kBAAMrB,GAASD,IAAzC,yBAGA,cAACN,EAAD,CAAa4B,QAAS,kBAAMC,OAAOX,KAAKN,IAAxC,qCAMAoB,EAAYtC,IAAOC,IAAV,yEAITsC,EAAUvC,IAAOC,IAAV,8FAKPuC,EAASxC,IAAOC,IAAV,2QAYNwC,EAAYzC,IAAOC,IAAV,qLASTyC,EAAa1C,IAAOG,IAAV,6DAIVwC,EAAc3C,IAAOG,IAAV,8EAKXyC,EAAc5C,IAAOG,IAAV,kGAMX0C,EAAc7C,IAAO8C,MAAV,gJAQXC,EAAsB/C,IAAOC,IAAV,4JAuDV+C,EA/CM,WAAO,IAAD,EACgBrC,mBAAS,IADzB,mBAClBsC,EADkB,KACLC,EADK,OAEcvC,mBAAS,IAFvB,mBAElBwC,EAFkB,KAENC,EAFM,OAGYzC,qBAHZ,mBAGlB0C,EAHkB,KAGPC,EAHO,KAInBC,EAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACOC,IAAMC,IAAN,0CACcH,EADd,mBAzJZ,WAyJY,oBAxJX,qCAuJI,OACVI,EADU,OAIhBR,EAAiBQ,EAASC,KAAKC,MAJf,2CAAH,sDAcf,OACE,eAACxB,EAAD,WACE,eAACE,EAAD,WACE,eAACD,EAAD,WACE,cAACI,EAAD,CAAaP,IAAI,wCADnB,YAIA,eAACK,EAAD,WACE,cAACC,EAAD,CAAYN,IAAI,0CAChB,cAACS,EAAD,CACEkB,YAAY,gBACZC,MAAOf,EACPgB,SAnBW,SAACC,GACpBC,aAAad,GACbH,EAAkBgB,EAAEE,OAAOJ,OAC3B,IAAMK,EAAUC,YAAW,kBAAMf,EAAUW,EAAEE,OAAOJ,SAAQ,KAC5DV,EAAgBe,YAmBd,cAACtB,EAAD,WACa,OAAVI,QAAU,IAAVA,OAAA,EAAAA,EAAYoB,QACXpB,EAAWxB,KAAI,SAACb,EAAQe,GAAT,OACb,cAAC,EAAD,CAA6Bf,OAAQA,EAAOA,QAAtBe,MAGxB,cAACe,EAAD,CAAaR,IAAI,8CC/L3BoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.571881bb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nconst APP_ID = \"89b918ab\";\r\nconst APP_KEY = \"bf8c235c6a919f76deb0f72e4ce53476\";\r\n\r\nconst RecipeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 300px;\r\n  box-shadow: 0 3px 10px 0 #aaa;\r\n`;\r\nconst CoverImage = styled.img`\r\n  object-fit: cover;\r\n  height: 200px;\r\n`;\r\nconst RecipeName = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 10px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst SeeMoreText = styled.span`\r\n  color: #eb3300;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  border: solid 1px #eb3300;\r\n  border-radius: 3px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n`;\r\nconst IngredientsText = styled(SeeMoreText)`\r\n  color: white;\r\n  border: solid 1px green;\r\n  background-color: green;\r\n  margin-bottom: 12px;\r\n`;\r\nconst SeeNewTab = styled(SeeMoreText)`\r\n  color: green;\r\n  border: solid 1px green;\r\n`;\r\nconst RecipeComponent = (props) => {\r\n  const [show, setShow] = useState(\"\");\r\n\r\n  const { label, image, ingredients, url } = props.recipe;\r\n  return (\r\n    <RecipeContainer>\r\n      <Dialog\r\n        onClose={() => console.log(\"adsadad\")}\r\n        aria-labelledby=\"simple-dialog-title\"\r\n        open={!!show}\r\n      >\r\n        <DialogTitle>Ingredients</DialogTitle>\r\n        <DialogContent>\r\n          <RecipeName>{label}</RecipeName>\r\n          <table>\r\n            <thead>\r\n              <th>Ingredient</th>\r\n              <th>Weight</th>\r\n            </thead>\r\n            <tbody>\r\n              {ingredients.map((ingredient, index) => (\r\n                <tr key={index} className=\"ingredient-list\">\r\n                  <td>{ingredient.text}</td>\r\n                  <td>{ingredient.weight}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <SeeNewTab onClick={() => window.open(url)}>See More</SeeNewTab>\r\n          <SeeMoreText onClick={() => setShow(\"\")}>Close</SeeMoreText>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <CoverImage src={image} alt={label} />\r\n      <RecipeName>{label}</RecipeName>\r\n      <IngredientsText onClick={() => setShow(!show)}>\r\n        Ingredients\r\n      </IngredientsText>\r\n      <SeeMoreText onClick={() => window.open(url)}>\r\n        See Complete Recipe\r\n      </SeeMoreText>\r\n    </RecipeContainer>\r\n  );\r\n};\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst AppName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\nconst Header = styled.div`\r\n  background-color: black;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 20px;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  box-shadow: 0 3px 6px 0 #555;\r\n`;\r\nconst SearchBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px 10px;\r\n  border-radius: 6px;\r\n  margin-left: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n`;\r\nconst SearchIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\nconst RecipeImage = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n  margin: 15px;\r\n`;\r\nconst Placeholder = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  margin: 200px;\r\n  opacity: 50%;\r\n`;\r\nconst SearchInput = styled.input`\r\n  color: black;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border: none;\r\n  outline: none;\r\n  margin-left: 15px;\r\n`;\r\nconst RecipeListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  padding: 30px;\r\n  gap: 20px;\r\n  justify-content: space-evenly;\r\n`;\r\nconst AppComponent = () => {\r\n  const [searchQuery, updateSearchQuery] = useState(\"\");\r\n  const [recipeList, updateRecipeList] = useState([]);\r\n  const [timeoutId, updateTimeoutId] = useState();\r\n  const fetchData = async (searchString) => {\r\n    const response = await Axios.get(\r\n      `https://api.edamam.com/search?q=${searchString}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n    );\r\n    updateRecipeList(response.data.hits);\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    clearTimeout(timeoutId);\r\n    updateSearchQuery(e.target.value);\r\n    const timeout = setTimeout(() => fetchData(e.target.value), 500);\r\n    updateTimeoutId(timeout);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <AppName>\r\n          <RecipeImage src=\"./react-recipe-finder/hamburger.svg\" />\r\n          Recipe\r\n        </AppName>\r\n        <SearchBox>\r\n          <SearchIcon src=\"./react-recipe-finder/search-icon.svg\" />\r\n          <SearchInput\r\n            placeholder=\"Search Recipe\"\r\n            value={searchQuery}\r\n            onChange={onTextChange}\r\n          />\r\n        </SearchBox>\r\n      </Header>\r\n      <RecipeListContainer>\r\n        {recipeList?.length ? (\r\n          recipeList.map((recipe, index) => (\r\n            <RecipeComponent key={index} recipe={recipe.recipe} />\r\n          ))\r\n        ) : (\r\n          <Placeholder src=\"./react-recipe-finder/hamburger.svg\" />\r\n        )}\r\n      </RecipeListContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppComponent;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}